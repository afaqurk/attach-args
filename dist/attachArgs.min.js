var attachArgs=function(t){function r(e){if(n[e])return n[e].exports;var o=n[e]={exports:{},id:e,loaded:!1};return t[e].call(o.exports,o,o.exports,r),o.loaded=!0,o.exports}var n={};return r.m=t,r.c=n,r.p="",r(0)}([function(t,r,n){"use strict";var e=n(1);t.exports=function(t,r,n){var o=e(t,n);o.forEach(function(n,e){t[n]=r[e]})}},function(t,r,n){"use strict";var e=n(2),o=n(3);t.exports=function(t,r){var s;if(o(r),r)try{s=n(4)("./"+r)(t)}catch(c){throw{err:"Could not parse specified class type",hint:"The classType you passed ("+r+") did not help. I was not able to parse the provided class"}}else if(e.forEach(function(r){var e=n(4)("./"+r)(t);e!==!1&&(s=e)}),!s)throw{err:"Could not parse specified class type",hint:"The class you passed in could not be identified as one of the supported class types ("+e.join(", ")+")"};return s.split(",").map(function(t){return t.replace(/\/\*.*\*\//,"").trim()}).filter(function(t){return t})}},function(t,r){"use strict";t.exports=["native-es6","babel-6"]},function(t,r,n){"use strict";var e=n(2);t.exports=function(t){if(t&&-1===e.indexOf(t))throw{err:"Unsupported class type passed:"+t,hint:"Supported class types are: "+e.join(", ")}}},function(t,r,n){function e(t){return n(o(t))}function o(t){return s[t]||function(){throw new Error("Cannot find module '"+t+"'.")}()}var s={"./babel-6":5,"./babel-6.js":5,"./native-es6":6,"./native-es6.js":6};e.keys=function(){return Object.keys(s)},e.resolve=o,t.exports=e,e.id=4},function(t,r){"use strict";t.exports=function(t){try{return t.constructor.toString().match(/function\s.*?\(([^)]*)\)/)[1]}catch(r){return!1}}},function(module,exports){"use strict";module.exports=function(classToParse){try{eval("class foo{}");var beginningOfConstructor=classToParse.constructor.toString().indexOf("constructor("),endOfConstructor=classToParse.constructor.toString().indexOf(")",beginningOfConstructor),lengthOfConstructor=endOfConstructor-beginningOfConstructor,argumentsOfConstructor=classToParse.constructor.toString().substr(beginningOfConstructor,lengthOfConstructor).replace("constructor(","");return argumentsOfConstructor}catch(error){return!1}}}]);